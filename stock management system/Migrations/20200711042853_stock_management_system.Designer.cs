// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using stock_management_system.Data;

namespace stock_management_system.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200711042853_stock_management_system")]
    partial class stock_management_system
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("stock_management_system.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Productos para el consumo de la gente",
                            Name = "Insumos"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Productos para la higiene de la casa",
                            Name = "Limpieza"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Para el cuidado de la higiene personal",
                            Name = "Higiene"
                        });
                });

            modelBuilder.Entity("stock_management_system.Models.Checkin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GrandTotal")
                        .HasColumnType("int");

                    b.Property<int>("SubTotal")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Checkin");
                });

            modelBuilder.Entity("stock_management_system.Models.CheckinList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckinId")
                        .HasColumnType("int");

                    b.Property<string>("ProductSku")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CheckinId");

                    b.HasIndex("ProductSku");

                    b.ToTable("CheckinLists");
                });

            modelBuilder.Entity("stock_management_system.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Checkout");
                });

            modelBuilder.Entity("stock_management_system.Models.CheckoutList", b =>
                {
                    b.Property<int>("CheckoutId")
                        .HasColumnType("int");

                    b.Property<string>("ProductSku")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CheckoutId", "ProductSku");

                    b.HasIndex("ProductSku");

                    b.ToTable("CheckoutLists");
                });

            modelBuilder.Entity("stock_management_system.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long>("Phone")
                        .HasColumnType("bigint")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasCheckConstraint("CK_Employee_PhoneNumber_Min_Value", "[Phone] >= 0");

                    b.HasCheckConstraint("CK_Employee_PhoneNumber_Max_Value", "[Phone] <= 9999999999");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "2018-0133@est.itsc.edu.do",
                            Lastname = "Tremols",
                            Name = "Juan",
                            Phone = 8097057474L
                        },
                        new
                        {
                            Id = 2,
                            Email = "pedroreyes@gmail.com",
                            Lastname = "Reyes",
                            Name = "Pedro",
                            Phone = 8097057424L
                        },
                        new
                        {
                            Id = 3,
                            Email = "gabrielwakanda@gmail.com",
                            Lastname = "Wakanda",
                            Name = "Gabriel",
                            Phone = 8093057474L
                        });
                });

            modelBuilder.Entity("stock_management_system.Models.Product", b =>
                {
                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AlertQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MarginProfitability")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("PhotoUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SellingPrice")
                        .HasColumnType("int");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.HasKey("Sku");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Sku = "IS000001",
                            AlertQuantity = 5,
                            CategoryId = 1,
                            Description = "Una paquete de papitas de papa pequeñas",
                            Name = "Papita fritolay papa",
                            SellingPrice = 250,
                            Units = 25
                        },
                        new
                        {
                            Sku = "IS000002",
                            AlertQuantity = 5,
                            CategoryId = 1,
                            Description = "Una paquete de papitas de dorito original pequeñas",
                            Name = "Papita doritos original",
                            SellingPrice = 350,
                            Units = 25
                        },
                        new
                        {
                            Sku = "IS000003",
                            AlertQuantity = 5,
                            CategoryId = 3,
                            Description = "Una paquete de pasta dental colgate en tamaño pequeñas",
                            Name = "Pasta dental colgate pequeña",
                            SellingPrice = 500,
                            Units = 10
                        });
                });

            modelBuilder.Entity("stock_management_system.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductSku")
                        .IsUnique();

                    b.ToTable("Stock");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductSku = "IS000001",
                            Quantity = 10,
                            Updated = new DateTime(2020, 7, 11, 4, 28, 53, 468, DateTimeKind.Utc).AddTicks(8393)
                        },
                        new
                        {
                            Id = 2,
                            ProductSku = "IS000002",
                            Quantity = 15,
                            Updated = new DateTime(2020, 7, 11, 4, 28, 53, 469, DateTimeKind.Utc).AddTicks(985)
                        },
                        new
                        {
                            Id = 3,
                            ProductSku = "IS000003",
                            Quantity = 5,
                            Updated = new DateTime(2020, 7, 11, 4, 28, 53, 469, DateTimeKind.Utc).AddTicks(1084)
                        });
                });

            modelBuilder.Entity("stock_management_system.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<long>("Phone")
                        .HasColumnType("bigint")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Suppliers");

                    b.HasCheckConstraint("CK_Supplier_PhoneNumber_Min_Value", "[Phone] >= 0");

                    b.HasCheckConstraint("CK_Supplier_PhoneNumber_Max_Value", "[Phone] <= 9999999999");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "colgaishon@est.itsc.edu.do",
                            Name = "Compañia de higiene personal colgaishon",
                            Phone = 8097057424L
                        },
                        new
                        {
                            Id = 2,
                            Email = "fritolay@est.itsc.edu.do",
                            Name = "Compañia de insumos papita y bebida",
                            Phone = 8094677424L
                        });
                });

            modelBuilder.Entity("stock_management_system.Models.Checkin", b =>
                {
                    b.HasOne("stock_management_system.Models.Employee", "Employee")
                        .WithMany("CheckIn")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stock_management_system.Models.Supplier", "Supplier")
                        .WithMany("Checkin")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("stock_management_system.Models.CheckinList", b =>
                {
                    b.HasOne("stock_management_system.Models.Checkin", "Checkin")
                        .WithMany("CheckinLists")
                        .HasForeignKey("CheckinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stock_management_system.Models.Product", "Product")
                        .WithMany("CheckInLists")
                        .HasForeignKey("ProductSku");
                });

            modelBuilder.Entity("stock_management_system.Models.Checkout", b =>
                {
                    b.HasOne("stock_management_system.Models.Employee", "Employee")
                        .WithMany("Checkout")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("stock_management_system.Models.CheckoutList", b =>
                {
                    b.HasOne("stock_management_system.Models.Checkout", "Checkout")
                        .WithMany("CheckoutLists")
                        .HasForeignKey("CheckoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stock_management_system.Models.Product", "Product")
                        .WithMany("CheckoutLists")
                        .HasForeignKey("ProductSku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("stock_management_system.Models.Product", b =>
                {
                    b.HasOne("stock_management_system.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("stock_management_system.Models.Stock", b =>
                {
                    b.HasOne("stock_management_system.Models.Product", "Product")
                        .WithOne("Stock")
                        .HasForeignKey("stock_management_system.Models.Stock", "ProductSku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
